<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd"
	default-autowire="byName">
	<!-- <mvc:annotation-driven/> -->
    <!-- ajax请求默认返回JSON -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<bean id="stringHttpMessageConverter"  
		        class="org.springframework.http.converter.StringHttpMessageConverter">  
		        <constructor-arg value="UTF-8" index="0"></constructor-arg>
		        <!--避免出现乱码 -->  
		        <property name="supportedMediaTypes">  
		            <list>  
		                <value>text/plain;charset=UTF-8</value>
		                <value>text/xml;charset=UTF-8</value>
		            </list>  
		        </property>
		    </bean>
			<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<context:component-scan base-package="com.ai.weixin.service" />

	<bean id="soaRestOauthDAO" class="com.ai.rest.dao.SOARestOauthDAO">
		<property name="driverClass" value="${jdbc.driverClassName_rest}" />
		<property name="name" value="${jdbc.username_rest}" />
		<property name="pwd" value="${jdbc.password_rest}" />
		<property name="url" value="${jdbc.url_rest}" />
	</bean>

	<!-- view -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="requestContextAttribute" value="request" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
	</bean>

	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="freemarkerVariables">
			<map>
				<entry key="mainDomain" value="${mainDomain}" />
				<entry key="miscDomain" value="${miscDomain}" />
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="locale">zh_CN</prop>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>
	
<!-- 	 <bean id="constantParam" class="com.ai.flow.common.constant.ConstantParam" lazy-init="true">
	 	<property name="profileName" value="${active.profilename}"/>
	 </bean> -->
	 
	 <!-- 微信SDK -->
	 <bean id="wxMpConfigStorage" class="me.chanjar.weixin.mp.api.WxMpInMemoryConfigStorage">
	 	<property name="appId" value="${APP_ID}"/>
	 	<property name="secret" value="${APP_SECRET}"/>
	 	<property name="token" value="${APP_TOKEN}"/>
	 	<property name="aesKey" value="${APP_AES_KEY}"/>
	 </bean>
	 
	 <bean id="wxService" class="me.chanjar.weixin.mp.api.WxMpServiceImpl">
	 	<property name="wxMpConfigStorage" ref="wxMpConfigStorage"/>
	 </bean>
	 
	 <bean id="wxMpMessageRouter" class="me.chanjar.weixin.mp.api.WxMpMessageRouter">
	 	<constructor-arg index="0" ref="wxService"/>
	 </bean>
	 
</beans>